import java.io.*;
import java.util.*;
public class Project {
    public static void main(String[] args) throws FileNotFoundException {
        Scanner main = new Scanner(System.in);
       //Place files paths
        String majorFile = "";
        String jobsFile = "";
        String salariesFile = "";

        //printing majors & storing majors in array
        System.out.println("This is an interactive program that prompts the user to choose majors from a four-year university, then choose corresponding job titles.\nThe user will input student loan information to determine if their average salaries will be able to cover their monthly loan payments.\nThis is applicable to universities in the United States only.\n");
        Scanner majorsInFile = new Scanner(new File(majorFile));
        String[] majorsChoices = new String[50]; //dependent on #majors;
            for (int j = 0; j < majorsChoices.length; j++) {
                majorsChoices[j] = majorsInFile.nextLine();
                System.out.printf("%-37s", majorsChoices[j]);
                if((j + 1 )% 5 == 0) System.out.println();
            }
        System.out.println();

        //stores information of chosen majors
        int numberOfMajors = numberOfMajorsInterested(main);
        String[] majors = new String[numberOfMajors];
        String[] jobs = new String[numberOfMajors];
        int[] salaries = new int[numberOfMajors];

        //get major/job/salary information from and for the user
        for(int run = 0; run < numberOfMajors;run++) {
            majors[run] = majorChoice(main, majorsChoices);
            jobs[run] = jobChoice(main, jobsFile, majors[run]);
            salaries[run] = getSalary(salariesFile, jobs[run]);
        }

        //will calculate loan information and print the summary onto a final file (need to find out how to make a file)
        fileCreation(main, loanCalculuation(main, majors, jobs, salaries));
    }
    public static int numberOfMajorsInterested(Scanner main) {
        System.out.print("\nHow many majors are you interested in? (max 12) ");
        while(!main.hasNextInt()) {
            main.nextLine();
            System.out.println("Invalid input. Please try again.");
            System.out.print("How many majors are you interested in? ");
        }
        int majors = main.nextInt();
        if(majors > 12) {
            numberOfMajorsInterested(main);
        } else {
            main.nextLine();
        }
        return majors;
    }

    // majors
    public static String majorChoice(Scanner main,String[] majorsChoices) throws FileNotFoundException {
        System.out.print("\nChosen major: ");
        String major = main.nextLine();
        int i = 0;
        while (i < majorsChoices.length) {
            if (major.equalsIgnoreCase(majorsChoices[i])) {
                major = majorsChoices[i];
                break;
            }
            i++;
            if (i == majorsChoices.length) {
                i = 0;
                System.out.println("Invalid major inputted. Please try again and choose from the list provided.");
                System.out.print("Chosen major: ");
                major = main.nextLine();
            }
        }
        return major;
    }
    //jobs
    public static String jobChoice(Scanner main, String jobsFile, String major) throws FileNotFoundException {
        Scanner jobFile = new Scanner(new File(jobsFile));
        String jobs[] = new String[10];
        String majorInFile = "Jobs you can get with a four-year " + major + " degree:";
        //prints jobs of major
        System.out.println("\n" + majorInFile);
        while (jobFile.hasNextLine()) {
            if (jobFile.nextLine().equalsIgnoreCase(majorInFile)) {
                for (int i = 0; i < jobs.length; i++) {
                    jobs[i] = jobFile.nextLine();
                    System.out.println(jobs[i]);
                }
            }
        }
        //interacts with user to ask for them to pick a job
        System.out.print("\nWhich job interests you? ");
        String job = main.nextLine();
        int salary = 0;
        int i = 0;
        while (i < jobs.length) {
            if (job.equalsIgnoreCase(jobs[i])) {
                job = jobs[i];
                break;
            }
            i++;
            if (i == jobs.length) {
                i = 0;
                System.out.println("Invalid job inputted. Please choose a job from the list above.");
                System.out.print("Job of Interest: ");
                job = main.nextLine();
            }
        }
        return job;
    }
    //salary
    public static int getSalary(String salariesFile, String job) throws FileNotFoundException {
        Scanner salaries = new Scanner(new File(salariesFile)); //
        while(salaries. hasNextLine()) {
            if(job.equalsIgnoreCase(salaries.nextLine())) {
                return salaries.nextInt();
            }
        }
        return 0;
    }
    // loan information
    public static String loanCalculuation(Scanner main, String[] majors, String[] jobs, int[] salaries) throws FileNotFoundException {
        System.out.println("\nBased on your careers of interest the following prompts will provide some information on your student loan payments.");
        //loan
        System.out.print("\nStudent loan amount(no more than six digits): $");
        while (!main.hasNextInt()){
            System.out.println("Invalid loan amount inputted. Please try again.");
            System.out.print("Student loan amount(no more than six digits): $");
            main.nextLine();
        }
        int loanAmount = main.nextInt();

        //loan rate
        System.out.print("\nInterest rate on loan(as a percentage): ");
        while (!main.hasNextDouble()) {
            main.next();
            System.out.println("Invalid interest rate inputted. Please make sure your loan rate is a percent (without the percent symbol).");
            System.out.print("Interest rate on loan(as a percentage): ");
            main.nextLine();
        }
        double loanRate = main.nextDouble();

        //term of loan
        System.out.print("\nTerm of loan(in years): ");
        while (!main.hasNextInt()) {
            main.next();
            System.out.println("Invalid loan term inputted. Make sure you are inputting a numerical value, no special characters.");
            System.out.print("Term of loan(in years): ");
            main.nextLine();
        }
        int loanTerm = main.nextInt();
        int loanMonthlyPay = (int) Math.round(loanRate / 12.0 / 100 * (loanAmount / (1 - (1 / Math.pow(1 + loanRate / 12.0 / 100, loanTerm * 12)))));
        // calculation monthly loan payment
        String loanInformation = "\nLoan: " + loanAmount + "\nInterest rate: " + loanRate + "%\nTerm of loan: " + loanTerm
                + " years" + "\nMonthly loan payment: $" + loanMonthlyPay +"\n\n";
        String loanSummary = "";
        for(int i = 0; i < majors.length; i++) {
            //System.out.printf("The national average yearly salary for a %s is $%d\n", jobs[i], salaries[i]);
            int loanPercentSalary = (int) Math.round(loanMonthlyPay * 12.0 / salaries[i] * 100);
             loanSummary += "\nMajor: " + majors[i] + "\nChosen job: " + jobs[i] + "\nAverage yearly salary: $" + salaries[i]
                    + "\nPercent of monthly salary going towards loan: "
                    + loanPercentSalary + "%\n";
        }
        System.out.println("\nSummary of provided information: \n" + loanInformation + "\n" + loanSummary);
        return loanInformation + "\n" + loanSummary;
    }

    //final file output
    public static void fileCreation(Scanner main,String loanSummary) throws FileNotFoundException {
        // start of file method
        System.out.print("\nDo you want a copy of this information stored on a separate file? ");
        String response = main.next();
        while (!response.equalsIgnoreCase("yes") && !response.equalsIgnoreCase("no")) {
            System.out.println("Invalid response (yes/no).");
            System.out.print("Do you want a copy of this information stored on a separate file? ");
            response = main.next();
        }

        if (response.equalsIgnoreCase("yes")) {
            System.out.print("\nEnter a file path: "); // copy and paste path without quotes
            String filePath = main.next();

            while ((filePath.indexOf('@') != -1) || (filePath.indexOf('$') != -1) || (filePath.indexOf('%') != -1) || (filePath.indexOf('&') != -1) ||
                    (filePath.indexOf('/') != -1) || (filePath.indexOf('*') != -1) || (filePath.indexOf('?') != -1) || (filePath.indexOf('\"') != -1) ||
                    (filePath.indexOf('\'') != -1) || (filePath.indexOf('<') != -1) || (filePath.indexOf('>') != -1) ||
                    (filePath.indexOf('|') != -1) || (filePath.indexOf('~') != -1) || (filePath.indexOf('`') != -1) ||
                    (filePath.indexOf('#') != -1) || (filePath.indexOf('^') != -1) || (filePath.indexOf('+') != -1) ||
                    (filePath.indexOf('=') != -1) || (filePath.indexOf('{') != -1) || (filePath.indexOf('}') != -1) ||
                    (filePath.indexOf('[') != -1) || (filePath.indexOf(']') != -1) || (filePath.indexOf(';') != -1) || (filePath.indexOf('!') != -1)) { // have to account for special characters
                System.out.println("Invalid file path.");
                System.out.print("Do you want information on proper file paths(yes/no)? ");
                String answerFileInfo = main.next();
                while (!answerFileInfo.equalsIgnoreCase("yes") && !answerFileInfo.equalsIgnoreCase("no")) {
                    System.out.println("Invalid response (yes/no).");
                    System.out.print("Do you want information on proper file paths(yes/no)? ");
                    answerFileInfo = main.next();
                }
                if (answerFileInfo.equalsIgnoreCase("yes")) {
                    System.out.println("\nAllowed: \n*Letters\n*Numbers\n*These Characters: (), _, -, , ,, .");
                    System.out.println("\nNot Allowed: \n*Spaces\n*Special Characters: @, $, %, &, /, *, ?, \"," +
                            " ', <, >, |, ~, `, #, ^, +, =, {, }, [, ], ;, !\n");
                    System.out.println("Example file path: C:\\Users\\naxos\\OneDrive\\Documents\\example.txt\n");
                    System.out.print("Enter a file path: ");
                    filePath = main.next();
                } else {
                    System.out.print("Enter a file path: ");
                    filePath = main.next();
                }
            }

            File file = new File(filePath);

            try {
                if (file.createNewFile()) {
                    System.out.print("\nFile created successfully.\n"); // if creating new file
                    BufferedWriter buffer = new BufferedWriter(new FileWriter(filePath));
                    buffer.write("Summary of provided information: \n" + loanSummary); // write in to file
                    buffer.close();
                } else {
                    System.out.print("\nFile already exists.\n"); // if adding to old file
                    BufferedWriter buffer = new BufferedWriter(new FileWriter(filePath));
                    buffer.write("Summary of provided information: \n" + loanSummary); // write in to file
                    buffer.close();
                }
            } catch (Exception ex) { // error if there are quotes around file path or if it is incorrect
            }
        } 
            System.out.print("\nThis is the end of the program.");
        }
    }

